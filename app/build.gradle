apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'//greendao插件dependencies

def releaseTime() {
    return new Date().format("yy.MMddHH", TimeZone.getTimeZone("GMT+08:00"))
}

def getVersionCode() {
    def versionCodeFile = file('version_code.properties')
    if (versionCodeFile.canRead()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(versionCodeFile))
        def versionCode = properties['VERSION_CODE'].toInteger()//读取version_code.properties文件存放的版本号。
        def runTasks = gradle.startParameter.taskNames
        def task = ':app:assembleRelease'
        if (task in runTasks) {
            properties['VERSION_CODE'] = (++versionCode).toString()
            properties.store(versionCodeFile.newWriter(), null)
        }
        return versionCode
    } else {
        throw new GradleException("无法读取version_code.properties文件！")
    }
}
def name = "风月读书"
def version = getVersionCode()

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "xyz.fycz.myreader"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode version
        versionName '1.' + releaseTime()
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters "x86", "armeabi", "armeabi-v7a"
            }
        }
        debug {
            ndk {
                abiFilters "x86", "armeabi", "armeabi-v7a"
            }
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${name}v${defaultConfig.versionName}.apk"
            }
        }
    }
    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir "libs/"
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')


    implementation 'com.jakewharton:butterknife:10.0.0'

    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'com.squareup.okhttp3:okhttp:3.14.7'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'

    implementation 'org.greenrobot:greendao:3.2.2'

    implementation 'org.jsoup:jsoup:1.11.3'

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'

    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.2'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.3'

    implementation 'me.gujun.android.taggroup:library:1.4@aar'

    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'io.alterac.blurkit:blurkit:1.1.0'

    implementation 'com.google.android.material:material:1.1.0'

    implementation 'com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:1.0.0'
    //Scroller
    implementation 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'
}

greendao {
    schemaVersion 9
    daoPackage 'xyz.fycz.myreader.greendao.gen'
//    targetGenDir 'src/main/java'
}
